{"version":3,"sources":["main.js"],"names":["swiper","document","querySelector","header","links","querySelectorAll","headerHeight","clientHeight","vh","window","innerHeight","concat","slidesPerView","documentElement","effect","loop","crossFade","nextEl","navigation","validateForms","selector","JustValidate","rules","name","required","email","messages","submitHandler","form","FormData","reset","console","log","forEach","el","addEventListener","e","preventDefault","getAttribute","elemPosition","href","getBoundingClientRect","top","scrollBy","behavior"],"mappings":"4YAAA,IAAMA,OAASC,SAASC,cAAc,WAChCC,OAASF,SAASC,cAAc,cAChCE,MAAQH,SAASI,iBAAiB,aAElCC,aAAeH,OAAOI,aACtBC,GAAKC,OAAOC,YAJlBT,SAAME,gBAAkBD,MAAAA,YAAc,OAAtC,GAAAS,OAAAH,GAAA,OAGA,IAAMF,OAAAA,IAAeH,OAAOI,OAAAA,CAC5BK,cAAkBF,EAElBT,MAASY,EAGPC,OAAA,OACDF,WAAa,CACVG,WAH8B,GAO9BC,WAAW,CAPmBC,OAAA,aAU/BC,OAAU,eAiBO,SAAhBC,cAAAC,GAID,IAdDX,OAAAY,aAAAD,EAAA,CADFE,MAAA,CAqBMC,KAAO,CAHbC,UAASL,GAGHI,MAAO,CACLC,UAAU,EAFPC,OAAA,GAOHA,KAAAA,CAPGD,UAAA,IAAAE,SADwB,CAgB/BA,KAAQ,CACNH,SAAM,eAINE,MAAO,CACLD,SAAU,gBACVC,MAAO,yBAIPD,KAAAA,CADIA,SAAA,sBAKRG,cAAe,SAAUC,GAGT,IAAAC,SAAAD,GAAGA,EAAAE,QAmBjBC,QAAQC,IAAI,wBAxFgB5B,MAAlC6B,SAAA,SAAAC,GAgBA9B,EAAK+B,iBAAS,SAAQ,SAAAC,GAClBA,EAACD,iBACDC,IAAEC,EAAAA,EAAAA,cAAFC,aAAA,QAOMC,EALNtC,SAAAC,cAAAsC,GAK0BC,wBAAwBC,IAAMpC,aAD5DG,OAAAkC,SAAA,CAIMD,IAAKH,EAHPK,SAAML,iBA4CapB,cAAA","file":"main.js","sourcesContent":["const swiper = document.querySelector('.slider');\r\nconst header = document.querySelector('.js-header');\r\nconst links = document.querySelectorAll('.js-links');\r\n\r\nconst headerHeight = header.clientHeight; //clientHeight: VISIBLE content & padding\r\nconst vh = window.innerHeight;\r\n\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`)\r\n\r\nconst slider = new Swiper(swiper, {\r\n  // Optional parameters\r\n\tslidesPerView: 1,\r\n    loop: false,\r\n\r\n    effect: 'fade',\r\n  \tfadeEffect: {\r\n    crossFade: true\r\n  },\r\n\r\n   navigation: {\r\n    nextEl: '.btn-right',\r\n    prevEl: '.btn-left',\r\n  },\r\n});\r\n\r\nlinks.forEach((el) => {\r\n  el.addEventListener('click', (e) =>{\r\n    e.preventDefault();\r\n    const href = e.currentTarget.getAttribute('href'); //берем  id секции куда нужно перенестись\r\n    // console.log(href);\r\n    const elem = document.querySelector(href); //достаем объект\r\n    // console.log(elem);\r\n    /*getBoundingClientRect() - возвращает объект DOMRect, который содержит размеры элемента\r\n     и его положение относительно видимой области просмотра*/\r\n    const elemPosition = elem.getBoundingClientRect().top - headerHeight; \r\n    // console.log(elemPosition);\r\n    window.scrollBy({\r\n      top: elemPosition,\r\n      behavior: 'smooth', \r\n    });\r\n  });\r\n});\r\n\r\nfunction validateForms (selector){\r\n  new window.JustValidate(selector,{\r\n    rules: {\r\n      name : {\r\n        required: true\r\n      },\r\n\r\n      email: {\r\n        required: true,\r\n        email: true\r\n      },\r\n\r\n      text: {\r\n        required: true\r\n      }\r\n    },\r\n\r\n    messages: {\r\n      name: {\r\n        required: 'Введите имя',\r\n      },\r\n\r\n      email: {\r\n        required: 'Введите почту',\r\n        email: 'Неверный формат почты'\r\n      },\r\n\r\n      text: {\r\n        required: 'Введите сообщение'\r\n      }\r\n    },\r\n\r\n    submitHandler: function (form) {\r\n      const formData = new FormData(form);\r\n\r\n      const sendData = async (formData) => {\r\n       \r\n       try{\r\n          const response = await fetch ('../resources/mail.php',{\r\n            method: 'POST',\r\n            body: formData\r\n          });\r\n\r\n          if (!response.ok){\r\n            throw new Error(response.statusText);\r\n          }\r\n\r\n          const answer =  await response.text();\r\n        } catch (e){\r\n         console.error(e);\r\n        } \r\n      } \r\n\r\n      form.reset();\r\n      console.log(\"Отправка успешна!\");\r\n    },\r\n  });\r\n}\r\n\r\nvalidateForms('.js-form');"]}